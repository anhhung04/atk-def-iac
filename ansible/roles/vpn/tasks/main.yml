---
- name: Install required packages
  ansible.builtin.apt:
    name:
      - iptables
      - iptables-persistent
      - netfilter-persistent
    state: present
    update_cache: true

- name: Stop Wireguard server
  ansible.builtin.systemd:
    name: "wg-quick@game"
    state: stopped

- name: Upload VPN server
  ansible.builtin.copy:
    src: "./out/server.conf"
    dest: "/etc/wireguard/game.conf"
    owner: root
    group: root
    mode: "0600"

- name: Start Wireguard server
  ansible.builtin.systemd:
    name: "wg-quick@game"
    state: started
    enabled: true

- name: Enable IP forwarding
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    sysctl_set: true
    reload: true

- name: Set default policies
  ansible.builtin.iptables:
    chain: "{{ item.chain }}"
    policy: "{{ item.policy }}"
    table: filter
  loop:
    - { chain: INPUT, policy: ACCEPT }
    - { chain: FORWARD, policy: DROP }
    - { chain: OUTPUT, policy: ACCEPT }

- name: Allow established connections
  ansible.builtin.iptables:
    chain: FORWARD
    table: filter
    jump: ACCEPT
    state: present
    ctstate: ESTABLISHED,RELATED

- name: Forward from 10.10.10.0/16 to 10.80.0.0/16
  ansible.builtin.iptables:
    chain: FORWARD
    source: 10.10.10.0/16
    destination: 10.80.0.0/16
    jump: ACCEPT
    table: filter
    state: present

- name: Forward from 10.60.0.0/16 to 10.80.0.0/16
  ansible.builtin.iptables:
    chain: FORWARD
    source: 10.60.0.0/16
    destination: 10.80.0.0/16
    jump: ACCEPT
    table: filter
    state: present

- name: Forward from 10.80.0.0/16 to 10.10.10.0/16
  ansible.builtin.iptables:
    chain: FORWARD
    source: 10.80.0.0/16
    destination: 10.10.10.0/16
    jump: ACCEPT
    table: filter
    state: present

- name: Setup NAT masquerading
  ansible.builtin.iptables:
    table: nat
    chain: POSTROUTING
    destination: 10.80.0.0/16
    jump: MASQUERADE
    state: present

- name: Save IPv4 rules
  ansible.builtin.command:
    cmd: netfilter-persistent save
  changed_when: true

- name: Ensure netfilter-persistent service is enabled and started
  ansible.builtin.service:
    name: netfilter-persistent
    state: started
    enabled: true

- name: Verify rules are loaded
  ansible.builtin.command: iptables -L -v -n
  register: iptables_verify
  changed_when: false

- name: Display current iptables rules
  ansible.builtin.debug:
    var: iptables_verify.stdout_lines

- name: Check IP forwarding status
  ansible.builtin.command: sysctl net.ipv4.ip_forward
  register: ip_forward_status
  changed_when: false

- name: Display IP forwarding status
  ansible.builtin.debug:
    var: ip_forward_status.stdout_lines

- name: Check NAT rules
  ansible.builtin.command: iptables -t nat -L -v -n
  register: nat_rules
  changed_when: false

- name: Display NAT rules
  ansible.builtin.debug:
    var: nat_rules.stdout_lines

- name: Check netfilter-persistent service status
  ansible.builtin.service_facts:
  register: service_state

- name: Display netfilter-persistent service status
  ansible.builtin.debug:
    var: service_state.ansible_facts.services['netfilter-persistent.service'].state
