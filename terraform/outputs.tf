output "game_vpc_id" {
  description = "ID of the created game VPC"
  value       = module.vulnbox-network.vpc_id
}

output "infra_vpc_id" {
  description = "ID of the created infrastructure VPC"
  value       = module.infra-network.vpc_id
}

output "instance_ids" {
  description = "IDs of the created droplets"
  value = {
    vulnboxes = [for droplet in digitalocean_droplet.vulnbox : droplet.id]
    vpn       = digitalocean_droplet.vpn.id
    master    = digitalocean_droplet.master.id
  }
}

output "instance_ips" {
  description = "Public IPv4 addresses of the created droplets"
  value = {
    vulnboxes = [for droplet in digitalocean_droplet.vulnbox : droplet.ipv4_address]
    vpn       = digitalocean_droplet.vpn.ipv4_address
    master    = digitalocean_droplet.master.ipv4_address
  }
}

output "droplet_urns" {
  description = "URNs of the created droplets"
  value = {
    vulnboxes = [for droplet in digitalocean_droplet.vulnbox : droplet.urn]
    vpn       = digitalocean_droplet.vpn.urn
    master    = digitalocean_droplet.master.urn
  }
}

output "domain_id" {
  description = "The ID of the created domain"
  value       = module.dns.domain_id
}

output "a_record_ids" {
  description = "The IDs of the created A records"
  value       = module.dns.a_record_ids
}

output "cname_record_ids" {
  description = "The IDs of the created CNAME records"
  value       = module.dns.cname_record_ids
}

resource "local_file" "ansible_inventory" {
  count    = var.generate_inventory ? 1 : 0
  filename = "${path.root}/../ansible/inventory.cfg"
  content  = <<-EOT
# Generated by Terraform - DO NOT EDIT MANUALLY
# Last updated: ${timestamp()}

[gamemaster]
game ansible_host=${digitalocean_droplet.master.ipv4_address} private_ip=${digitalocean_droplet.master.ipv4_address_private}

[vpn]
vpn ansible_host=${digitalocean_droplet.vpn.ipv4_address} private_ip=${digitalocean_droplet.vpn.ipv4_address_private}

[vulnbox]
%{for index, droplet in digitalocean_droplet.vulnbox~}
vulnbox-${format("%03d", index + 1)} ansible_host=${droplet.ipv4_address} private_ip=${droplet.ipv4_address_private}
%{endfor~}

[all:vars]
ansible_user=root
ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
ansible_python_interpreter=/usr/bin/python3
domain_name=${var.domain_name}
environment=${var.environment}
project_name=${var.project_name}
EOT

  # Ensure proper permissions on the inventory file
  file_permission = "0644"
}
